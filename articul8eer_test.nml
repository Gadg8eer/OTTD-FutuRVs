# 1 "articul8eer_test.pnml"
/* IH_Qicksilver 6.1 will dummy out several locomotives. Dummied out locos will return when Iron Horse 2.0 is released. Cargo Sprinter will return because the Iron Horse Sprinter wasn't a dual-headed locomotive. */
# 1 "src/00_header.pnml" 1
/* This is the Header. Change the grfid to something like "YOU/01" or "SET/01" to start creating a new set. */
grf {
    grfid: "G8R\05";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESCRIPTION);
    version: 5;
    min_compatible_version: 5;
}

/*
 * *********************
 * Define roadtype table
 * *********************
 */
 
/* This is the Road Type Table. You can add roadtype labels (such as ROAD) to extend compatibility. */

 roadtypetable {
	/* Default Roads */
	ROAD, ELRD, RCDN, RCDE, RECN, RECE,
	/* Unsurfaced Roads */
	OFFR, OFRD, OAAN, OBAN,
	/* Industrial Roads */
	HAUL, ELHL, IADN, IBEN, IBEE, ICEN, ICEE, IDEN, IDEE,
	/* Highways */
	HWAY, HBBN, HFDN,
	/* URS Compatibility */
	TELE, WIRE, CEAE,
	PIPE, PAAN, PBBN,
	UTIL, UAAE, UBBN,
	/* URaTT Compatibility */
	ORD0, ORD1, ORD2, ORD3, ORD4,
	SRD0, SDR1, SRD2,
	ARD0, ARD1, ARD2, ARD3, ARD4, ARD5,
	ERD0, ERD1, ERD2,
	/* Country Roads Compatibility */
	SAND, FORD, FRZN,
	/* Waterways Compatibility */
	WWAY, FORD, AMPH, FRZN, RWAY,
	/* Docklands Compatibility */
	YDRD, CBRD, CBRE, PVRD, PVRE, ISRD, ISRE,
	/* Unspooled Compatibility */
	DIRT, GRAV, EGRV, ASPT, ELAS,
	/* AuzRoads Compatibility */
	AUZB, AUZC,
	/* Smartroads */
	SEES, SMRT,
	SMART: [ROAD, ELRD, RECN, RECE, SMRT, SEES],
	}

/*
 * *********************
 * Define tramtype table
 * *********************
 */

 tramtypetable {
	RAIL, ELRL,
	/* GRC Compatibility */
	MTRO,
	MONO,
	AUTO,
	/* URaTT Compatibility */
	RAL1, ERL1,
	RAL2, ERL2,
	RAL3, ERL3,
	RAL4, ERL4,
	RAL5, ERL5,
	/* Docklands Compatibility */
	YDTR, CBTR, CBTE, PVTR, PVTE, ISTR, ISTE,
	/* Unspooled Compatibility */
	RLOW, ELOW, MLRL, EMLR
	}

/*
* ********************************************
* Define cargo translation table and refits
* ********************************************
*/
 
/* This is the cargo table. Check https://newgrf-specs.tt-wiki.net/wiki/CargoTypes to find cargo labels and add them to the cargo table. */
 
 cargotable {
//Default cargos
   PASS, MAIL
   }
 
# 1 "articul8eer_test.pnml" 2
# 1 "src/01_testbus.pnml" 1
/* This is the template. When you're more experienced, you can try editing this, but if it's all gibberish then just modify "FooBarTramVehicleTemplates.png" in GIMP to create a vehicle. Each template below refers to a specific vehicle length, so make sure to put the vehicle sprites in the right part of "FooBarTramVehicleTemplates.png" when drawing a vehicle. */

template template_bus_32(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         20,         10,        28,           -4,         -11]
    [0+ 20,     20,         26,        28,          -17,         -14]
    [0+ 50,     20,         36,        28,          -18,         -20]
    [0+ 90,     20,         26,        28,           -9,         -15]
    [0+120,     20,         10,        28,           -4,         -11]
    [0+140,     20,         26,        28,          -16,         -16]
    [0+170,     20,         36,        28,          -18,         -20]
    [0+210,     20,         26,        28,           -8,         -16]
}

template template_bus_28(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         60,         10,        28,           -4,         -11]
    [0+ 20,     60,         26,        28,          -17,         -14]
    [0+ 50,     60,         36,        28,          -20,         -20]
    [0+ 90,     60,         26,        28,           -9,         -15]
    [0+120,     60,         10,        28,           -4,         -13]
    [0+140,     60,         26,        28,          -16,         -16]
    [0+170,     60,         36,        28,          -16,         -20]
    [0+210,     60,         26,        28,           -8,         -16]
}

template template_bus_24(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         100,        10,        28,           -4,         -11]
    [0+ 20,     100,        26,        28,          -17,         -14]
    [0+ 50,     100,        36,        28,          -22,         -20]
    [0+ 90,     100,        26,        28,           -9,         -15]
    [0+120,     100,        10,        28,           -4,         -15]
    [0+140,     100,        26,        28,          -16,         -16]
    [0+170,     100,        36,        28,          -14,         -20]
    [0+210,     100,        26,        28,           -8,         -16]
}

template template_bus_20(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         140,        10,        28,           -4,         -10]
    [0+ 20,     140,        26,        28,          -17,         -14]
    [0+ 50,     140,        36,        28,          -24,         -20]
    [0+ 90,     140,        26,        28,           -9,         -15]
    [0+120,     140,        10,        28,           -4,         -16]
    [0+140,     140,        26,        28,          -16,         -16]
    [0+170,     140,        36,        28,          -12,         -20]
    [0+210,     140,        26,        28,           -8,         -16]
}

template template_bus_16(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         180,        10,        28,           -4,          -9]
    [0+ 20,     180,        26,        28,          -17,         -14]
    [0+ 50,     180,        36,        28,          -26,         -20]
    [0+ 90,     180,        26,        28,           -9,         -15]
    [0+120,     180,        10,        28,           -4,         -17]
    [0+140,     180,        26,        28,          -16,         -16]
    [0+170,     180,        36,        28,          -10,         -20]
    [0+210,     180,        26,        28,           -8,         -16]
}

template template_bus_12(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         220,        10,        28,           -4,          -8]
    [0+ 20,     220,        26,        28,          -17,         -14]
    [0+ 50,     220,        36,        28,          -28,         -20]
    [0+ 90,     220,        26,        28,           -9,         -15]
    [0+120,     220,        10,        28,           -4,         -18]
    [0+140,     220,        26,        28,          -16,         -16]
    [0+170,     220,        36,        28,           -8,         -20]
    [0+210,     220,        26,        28,           -8,         -16]
}

template template_bus_8(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         260,        10,        28,           -4,          -7]
    [0+ 20,     260,        26,        28,          -17,         -14]
    [0+ 50,     260,        36,        28,          -30,         -20]
    [0+ 90,     260,        26,        28,           -9,         -15]
    [0+120,     260,        10,        28,           -4,         -19]
    [0+140,     260,        26,        28,          -16,         -16]
    [0+170,     260,        36,        28,           -6,         -20]
    [0+210,     260,        26,        28,           -8,         -16]
}

template template_bus_4(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         300,        10,        28,           -4,          -6]
    [0+ 20,     300,        26,        28,          -17,         -14]
    [0+ 50,     300,        36,        28,          -32,         -20]
    [0+ 90,     300,        26,        28,           -9,         -15]
    [0+120,     300,        10,        28,           -4,         -20]
    [0+140,     300,        26,        28,          -16,         -16]
    [0+170,     300,        36,        28,           -4,         -20]
    [0+210,     300,        26,        28,           -8,         -16]
}

template template_purchase(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         340,        50,        12,          -25,          -6]
}

/* These are the spritesets. */

//Step 1: Give your png file a name that makes sense to you.

//Step 2: Change "set_testbus_... to set_<insertlabelhere>_... and "gfx/testbus_0.png" to "gfx/<insertgrfnamehere>.png".

//Step 3: Change "template_bus_28" to "template_bus_xx", replacing xx with the length of the FRONT section of the articulated vehicle. Remember that you can only use 32, 28, 24, 20, 16, 12, 8 and 4 unless you change the templates.

//Step 4: Change "template_bus_22" to "template_bus_xx", replacing xx with the length of the REAR section of the articulated vehicle. Remember that you can only use 32, 28, 24, 20, 16, 12, 8 and 4 unless you change the templates.

spriteset (set_testbus_front_lighted,	"gfx/testbus_0.png") { template_bus_28(2, 2) }
spriteset (set_testbus_rear_lighted,	"gfx/testbus_0.png") { template_bus_20(386, 2) }
spriteset (set_testbus_purchase,		"gfx/testbus_0.png") { template_purchase(290, 2) }

switch (FEAT_ROADVEHS, SELF, switch_articulated_test, extra_callback_info1)
{ 1: return item_testbus_0_rear; return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

//------------------------------------------------TEST BUS CODE SECTION------------------------------------------------

/* This is the item that the road vehicle comes from. Change "item_testbus_0_front" to "item_<insertnamehere>_0_front". You can edit most of the properties listed under the "property" block to reflect the stats of the vehicle. */

item(FEAT_ROADVEHS, item_testbus_0_front) {
    property {
        name: string(STR_NAME_BUS_ARTICULATED);
        climates_available: bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND); // available in toyland?
        introduction_date: date(2025, 1, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 20;
        reliability_decay: 32;
        refittable_cargo_classes: bitmask();
        non_refittable_cargo_classes: bitmask();
        cargo_allow_refit: [];
        cargo_disallow_refit: [];
        cost_factor: 208;
        running_cost_factor: 6;
        sprite_id: SPRITE_ID_NEW_ROADVEH;
        speed: 50 mph;
        refit_cost: 0;
        tram_type: AUTO;
        power: 200 hp;
        running_cost_base: RUNNING_COST_ROADVEH;
		default_cargo_type: PASS;
        cargo_capacity: 40;
        weight: 6 tons;
        //air_drag_coefficient: default;
        length: 7;
		loading_speed: 6;
		visual_effect: EFFECT_SPAWN_MODEL_NONE;
		misc_flags: bitmask(ROADVEH_FLAG_TRAM, ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
    }
	
/* This is the graphics block that the road vehicle's graphics comes from. Refer to Step 2 of the spriteset instructions earlier in this code to replace "set_testbus_..." and change "switch_articulated_test" to "switch_articulated_<insertnamehere>". */
	
    graphics {
        default: set_testbus_front_lighted;
        purchase: set_testbus_purchase;
        articulated_part: switch_articulated_test;
    }
}

/* This is the item that the road vehicle's trailer comes from. Change "item_testbus_0_rear" to "item_<insertnamehere>_0_rear". You can edit most of the properties listed under "property" to reflect the stats of the vehicle, but remember that it's supposed to be a trailer, not a vehicle unto itself. Despite this, the trailer must have at least 1 hp, due to a quirk of OpenTTD. */

item(FEAT_ROADVEHS, item_testbus_0_rear) {
    property {
        name: string(STR_NAME_BUS_ARTICULATED);
        climates_available: NO_CLIMATE; // available in toyland?
        introduction_date: date(2025, 1, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 0;
        reliability_decay: 20;
        refittable_cargo_classes: bitmask();
        non_refittable_cargo_classes: bitmask();
        cargo_allow_refit: [];
        cargo_disallow_refit: [];
        cost_factor: 0;
        running_cost_factor: 0;
        sprite_id: SPRITE_ID_NEW_ROADVEH;
        refit_cost: 0;
        tram_type: AUTO;
        power: 1 hp;
        running_cost_base: RUNNING_COST_NONE;
		default_cargo_type: PASS;
        cargo_capacity: 20;
        weight: 3 tons;
        //air_drag_coefficient: default;
        length: 5;
		misc_flags: bitmask(ROADVEH_FLAG_TRAM, ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
    }
    graphics {
        default: set_testbus_rear_lighted;
        purchase: set_testbus_rear_lighted;
			
    }
}
# 1 "articul8eer_test.pnml" 2
